{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/YearFilter/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Chart/ExpenseChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSavingExpenseForm","className","type","value","onChange","target","min","step","max","onClick","hideForm","NewExpense","formShown","setFormShown","changeFormHandler","enteredExpenseData","id","expenseLength","console","log","onSaving","Card","classes","children","ExpensesFilter","val","selYear","parseInt","month","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","ExpensesList","expenses","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartExpenses","forEach","expenseMonth","getMonth","Expenses","setYear","filteredExpenses","items","filter","DummyExpense","App","setExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.772caba6.chunk.js","sourcesContent":["import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n\r\n    // Avoid form submission\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      // + is used to add number in number not in string\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate)\r\n    }\r\n\r\n    props.onSavingExpenseForm(expenseData);\r\n\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.hideForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n  const [formShown, setFormShown] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: props.expenseLength\r\n    }\r\n    console.log(expenseData)\r\n    props.onSaving(expenseData)\r\n    setFormShown(!formShown);\r\n  }\r\n\r\n  const changeFormHandler = () => {\r\n    setFormShown(!formShown);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      { formShown && <ExpenseForm onSavingExpenseForm={saveExpenseDataHandler} hideForm={changeFormHandler} /> }\r\n      { !formShown && <button onClick={changeFormHandler}>Add Expenses</button> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  // Classes from ExpenseItem is treated as props.className\r\n  const classes = \"card \" + props.className;\r\n  // props.children is used to hold other custom-component inside Card\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const addEntryClick = (e) => {\r\n    props.selYear(parseInt(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={(val) => {addEntryClick(val)}}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction Date(props) {\r\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Date;","import \"./ExpenseItem.css\";\r\nimport {useState} from 'react';\r\nimport Date from \"./ExpenseDate\";\r\nimport React from \"react\";\r\nimport Card from '../UI/Card'\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  const [title, setTitle]  = useState(props.title);\r\n\r\n  const clickHandler = () => {\r\n    setTitle('Updated');\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <Date date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        <button className=\"expense-item__price\" onClick={clickHandler}>\r\n          Click Me\r\n        </button>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import Item from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n   \r\n  if (props.expenses.length === 0) {\r\n      return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\r\n  }\r\n\r\n  return (\r\n      <ul className=\"expenses-list\">\r\n          { props.expenses.map(expense => (\r\n          <Item\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n          />\r\n          )) }\r\n      </ul>\r\n  )\r\n\r\n}\r\n\r\nexport default ExpensesList;","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = 0;\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n\r\n\tconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n\tconst totalMaximum = Math.max(...dataPointValues);\r\n\r\n\treturn <div className=\"chart\">\r\n\t\t{ props.dataPoints.map((dataPoint) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMaximum}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})}\r\n\t</div>\r\n}\r\n\r\nexport default Chart;","import Chart from './Chart';\r\n\r\nconst ExpenseChart = props => {\r\n\r\n    const chartExpenses = [\r\n\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 }\r\n\r\n    ]\r\n\r\n    props.expenses.forEach(expense => {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartExpenses[expenseMonth].value += expense.amount;\r\n    })\r\n\r\n    return (\r\n        <Chart dataPoints={chartExpenses} />\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseChart;","// Item must be started with uppercase so react can differentiate b/w custom component and HTML component\r\nimport \"./expenses.css\";\r\nimport { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"../YearFilter/ExpenseFilter\";\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpenseChart from '../Chart/ExpenseChart';\r\n\r\nfunction Expenses(props) {\r\n  const [year, setYear] = useState(2022);\r\n\r\n  const selYear = (year) => {\r\n    setYear(year);\r\n  };\r\n\r\n  // Now the filteredExpense array will contain only the elements of expenses having year matches\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear() === year;\r\n  });\r\n\r\n  // JSX can be used return\r\n  // let expensesItems = <p>No expenses found.</p>;\r\n\r\n  // if (filteredExpenses.length > 0) {\r\n  //   expensesItems = filteredExpenses.map((expense) => (\r\n  //     <Item\r\n  //       key={expense.id}\r\n  //       title={expense.title}\r\n  //       amount={expense.amount}\r\n  //       date={expense.date}\r\n  //     />\r\n  //   ));\r\n  // }\r\n\r\n  return (\r\n    // We have to use builtin props.children in Card.js to use other custom-components in it also className as props.className value\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter selYear={selYear} />\r\n\r\n      {/* In js, statement after && is executed if condition before it is correct */}\r\n      {/* {filteredExpenses.length === 0 && <p>No expenses found.</p> }\r\n      {filteredExpenses.length > 0 && filteredExpenses.map((expense) => {\r\n        return (\r\n          <Item\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n        })\r\n      } */}\r\n\r\n      {/* We can also directly store and use variable */}\r\n      {/* {expensesItems} */}\r\n\r\n      {/* We can also use separate file to show the contents */}\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpensesList expenses={filteredExpenses} />\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport { useState } from \"react\";\n  \nconst DummyExpense = [\n  { id: 0, title: \"Car Insurance\", amount: \"500\", date: new Date(2021, 5, 2) },\n  { id: 1, title: \"Shopping\", amount: \"800\", date: new Date(2019, 3, 24) },\n  { id: 2, title: \"Marketting\", amount: \"950\", date: new Date(2021, 1, 18) },\n  { id: 3, title: \"Electricity Bill\", amount: \"440\", date: new Date(2022, 2, 25) },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DummyExpense);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(() => {\n      return [expense, ...expenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onSaving={addExpenseHandler} expenseLength={expenses.length} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}